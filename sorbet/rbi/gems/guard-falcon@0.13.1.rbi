# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `guard-falcon` gem.
# Please instead update this file by running `bin/tapioca gem guard-falcon`.

# source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:32
module Guard
  class << self
    # source://guard-2.18.0/lib/guard.rb:87
    def async_queue_add(changes); end

    # source://guard-2.18.0/lib/guard.rb:73
    def init(cmdline_options); end

    # source://guard-2.18.0/lib/guard.rb:24
    def interactor; end

    # source://guard-2.18.0/lib/guard.rb:23
    def listener; end

    # source://guard-2.18.0/lib/guard.rb:22
    def queue; end

    # source://guard-2.18.0/lib/guard.rb:44
    def setup(cmdline_options = T.unsafe(nil)); end

    # source://guard-2.18.0/lib/guard.rb:21
    def state; end

    private

    # source://guard-2.18.0/lib/guard.rb:132
    def _evaluate(options); end

    # source://guard-2.18.0/lib/guard.rb:152
    def _guardfile_deprecated_check(modified); end

    # source://guard-2.18.0/lib/guard.rb:113
    def _listener_callback; end

    # source://guard-2.18.0/lib/guard.rb:128
    def _pluginless_guardfile?; end

    # source://guard-2.18.0/lib/guard.rb:109
    def _relative_pathnames(paths); end

    # source://guard-2.18.0/lib/guard.rb:99
    def _relevant_changes?(changes); end
  end
end

# source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:33
module Guard::Falcon
  class << self
    # source://guard-falcon-0.13.1/lib/guard/falcon.rb:25
    def new(*arguments, **options); end

    # Workaround for https://github.com/guard/guard/pull/872
    #
    # source://guard-falcon-0.13.1/lib/guard/falcon.rb:30
    def superclass; end
  end
end

# source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:34
class Guard::Falcon::Plugin < ::Guard::Plugin
  # @return [Plugin] a new instance of Plugin
  #
  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:41
  def initialize(**options); end

  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:51
  def container_class; end

  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:55
  def container_options; end

  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:71
  def endpoint; end

  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:75
  def load_app; end

  # As discussed in https://github.com/guard/guard/issues/713
  #
  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:82
  def logger; end

  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:94
  def reload; end

  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:102
  def run_on_change(paths); end

  # @return [Boolean]
  #
  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:90
  def running?; end

  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:86
  def start; end

  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:98
  def stop; end

  private

  # source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:59
  def build_endpoint; end
end

# source://guard-falcon-0.13.1/lib/guard/falcon/plugin.rb:35
Guard::Falcon::Plugin::DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://guard-2.18.0/lib/guard/version.rb:2
Guard::VERSION = T.let(T.unsafe(nil), String)
