:ruby
  Icon = import("/app/components/UI/Icon")
  Name = import("./Name")
  FileEntry = import("./FileEntry")

  def self.get_initial_state(initial_open: false, **) = {
    open: initial_open,
    entries: nil,
  }

  def mount
    if @open
      update(entries: load_entries)
    end
  end

  def should_update?(next_props, next_state)
    @open != next_state[:open]
  end

  def handle_toggle
    open = !@open
    entries = @entries || (open && load_entries)
    { open:, entries: }
  end

  def icon = @open ? "folder-open" : "folder"

  private

  def load_entries
    props => { root:, path: }

    entries =
      Dir
        .entries(File.join(root, path))
        .difference(%w[. ..])
        .sort
        .map { File.join(path, _1) }
        .group_by { File.directory?(File.join(root, _1)) }

    {
      directories: entries[true] || [],
      files: entries[false] || [],
    }
  end
:css
  li {
    margin: 0;
    padding: 0;
  }

  ul {
    list-style-type: none;
    margin: 0;
    margin-left: 1em;
    padding: 0;
  }

  button {
    all: unset;
  }

  button:hover {
    text-decoration: underline;
    cursor: pointer;
  }
%div
  %Name(icon=icon color="var(--blue)")
    %button(type="button" onclick=handle_toggle)
      #{File.basename($path)}/

  = if @open
    = if entries = @entries
      %ul
        = entries[:directories]&.map do |path|
          %li[path]
            %Self{root: $root, path:}
        = entries[:files]&.map do |path|
          %li[path]
            %FileEntry{path:}
