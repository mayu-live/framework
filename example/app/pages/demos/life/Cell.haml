:ruby
  def should_update?(next_props, _next_state)
    case
    when $alive != next_props[:alive]
      true
    when $x != next_props[:x]
      true
    when $y != next_props[:y]
      true
    else
      false
    end
  end

- props => x:, y:, alive:, ondraw:, **rest
- value = "#{x} #{y}"

%button{
  **rest,
  value:,
  class: { alive: },
  oncontextmenu: "event.preventDefault()",
  onmousedown: ondraw,
  onmouseenter: ondraw,
}

:css
  @keyframes alive {
    0% { background-color: hsl(0deg 50% 50%); }
    33% { background-color: hsl(120deg 50% 50%); }
    66% { background-color: hsl(240deg 50% 60%); }
    100% { background-color: hsl(360deg 50% 50%); }
  }

  button {
    border: 0;
    aspect-ratio: 1;
    flex: 1;
  }

  button { background-color: #fff; }
  button:hover { background-color: var(--material-color-gray-500); }

  .alive {
    background-color: #000;
    animation-duration: 2s;
    animation-name: alive;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  }

  .alive:hover {
    filter: brightness(150%);
  }

  button:active:hover { background-color: #000; }
