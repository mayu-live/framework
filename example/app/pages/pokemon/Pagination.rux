Fieldset = require("/app/components/Form/Fieldset")
Button = require("/app/components/Form/Button")

def pagination_window(current_page:, total_pages:, window_size: 5)
  half_window_size = (window_size - 1) / 2
  first = current_page - half_window_size.ceil
  last = current_page + half_window_size.floor

  case
  when first < 1
    1..[total_pages, window_size].min
  when last >= total_pages
    [total_pages + first - last, 1].max..total_pages
  else
    first..last
  end
end

def render
  props => { page: }

  prev_page_link = page > 1 && "?page=#{page.pred}"
  next_page_link = page <= props[:total_pages] && "?page=#{page.succ}"

  <Fieldset>
    <legend>Page {page} of {props[:total_pages].succ}</legend>

    <div class={styles.buttons}>
      <a href={prev_page_link} class={styles.button}>
        Previous page
      </a>

      <ul class={styles[:pages]}>
        {pagination_window(
          current_page: page,
          total_pages: props[:total_pages].succ,
          window_size: props[:window_size] || 7,
        ).map do |p|
          href = p == page ? nil : "?page=#{p}"

          <li key={p}>
            <a class={styles[:page]} href={href}>{p}</a>
          </li>
        end}
      </ul>

      <a href={next_page_link} class={styles.button}>
        Next page
      </a>
    </div>

    <div class={styles.perPage}>
      Per page:
      {" "}
      <select on-change={props[:on_change_per_page]} value={props[:per_page]}>
        {[20, 40, 80].map do |value|
          <option key={value} value={value}>{value}</option>
        end}
      </select>
    </div>
  </Fieldset>
rescue => e
  <pre>{e.message} {JSON.generate(props)}</pre>
end
