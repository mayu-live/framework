:ruby
  Card = import("/app/components/Layout/Card")
  Icon = import("/app/components/UI/Icon")

  def self.get_initial_state(initial_value: 0, **) = {
    count: initial_value
  }

  def handle_decrement(event)
    update do |state|
      count = [0, state[:count] - 1].max
      { count: }
    end
  end

  def handle_increment(event)
    update do |state|
      count = state[:count] + 1
      { count: }
    end
  end

:css
  .card {
    margin: 4em auto;
    max-width: 10em;
  }

  .counter {
    display: flex;
    padding: 1em;
    align-items: center;
    user-select: none;
  }

  .count {
    flex-basis: 3em;
    text-align: center;
    font-size: 1.2em;
    text-align: center;
  }

  .button {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
    border-radius: 100%;
    border: 0;
    background: var(--green);
    aspect-ratio: 1;
    box-shadow: rgba(0, 0, 0, 0.34) 0px 2px 4px;
    cursor: pointer;
    font-weight: bold;
    padding: 0;
    color: #fff;
    --transition-length: 100ms;
    transition:
      filter var(--transition-length),
      box-shadow var(--transition-length);
  }

  .button:hover {
    filter: brightness(110%);
  }

  .button:active {
    filter: brightness(80%);
    box-shadow: rgba(0, 0, 0, 0.24) 0px 2px 4px;
  }

  .button:disabled {
    filter: grayscale(100%);
    box-shadow: rgba(0, 0, 0, 0.24) 0px 2px 4px;
  }

%Card.card
  .counter
    - decrement_disabled = state[:count].zero?
    %button.button(title="Decrement" onclick=handle_decrement disabled=decrement_disabled)
      %Icon(name="minus" color="var(--bright)")
    %span.count= state[:count]
    %button.button(title="Increment" onclick=handle_increment)
      %Icon(name="plus" color="var(--bright)")
