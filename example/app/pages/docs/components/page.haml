:ruby
  Markdown = import("../Markdown")

%head
  %title Components

%article
  %Markdown
    :plain
      # Components

      Mayu components are written in a dialect of
      [Haml](https://haml.info/).
      Mayu parses Haml code and transforms it into Ruby.

      To see how these transformations are made, see the
      [Haml transformer test examples](https://github.com/mayu-live/framework/tree/main/lib/mayu/resources/transformers/__test__/haml).

      ## Component structure

      This is the basic structure of a component:

      ```haml
      :ruby
        # optional ruby block
      %p
        Haml goes here
      :css
        /* optional css block */
      ```

      In the `:ruby` block, which has to come first,
      you can import other components and define methods.

      ## A basic component

      Here is the most basic component

      ```haml
      %p Hello world
      ```

      It compiles into:

      ```ruby
      Mayu::VDOM::H[:p, "Hello world"]
      ```

      ## Multiple children

      Only the last child is returned, so if you want to return
      more than one element you need to group them.

      ```haml
      %div
        %p Hello world
        %button Click me
      ```

      ## Interpolation

      You can perform string interpolation in a lot of places:

      ```haml
      :ruby
        text = "hello world"
      %div
        %p Contents of text: \#{text.inspect}
        %button(title=text) Button with a title
        %button{title: "text: \#{text}"} Button with a title
      ```
