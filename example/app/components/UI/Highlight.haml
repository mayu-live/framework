:ruby
  ::Kernel.require("rouge")

  def get_tokens
    lexer&.lex(Array(__children).join)
  end

  def lexer
    return unless $language
    case $language.to_sym
    when :haml
      Rouge::Lexers::Haml.new
    when :shell
      Rouge::Lexers::Shell.new
    when :jsx
      Rouge::Lexers::JSX.new
    when :ruby
      Rouge::Lexers::Ruby.new
    when :html
      Rouge::Lexers::HTML.new
    when :css
      Rouge::Lexers::CSS.new
    when :json
      Rouge::Lexers::JSON.new
    end
  end

  def token_class_name(token)
    shortname = token.shortname

    unless shortname.empty?
      shortname.to_sym
    end
  end

= if tokens = get_tokens
  .container
    .card
      %code.highlight
        = tokens.map do |token, str|
          = if str == " " && !token.shortname
            &nbsp;
          = else
            %span{class: token_class_name(token)}= str
= else
  .container
    .card
      %code.highlight= Array(__children).join

:css
  .container {
    display: grid;
  }

  .card {
    display: grid;
    background: var(--deep-purple);
    border-radius: 2px;
    box-shadow: rgba(50, 50, 93, 0.55) 0px 13px 27px -5px, rgba(0, 0, 0, 0.9) 0px 8px 16px -8px;
    margin: 1em;
    overflow-y: auto;
  }
