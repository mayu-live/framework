:ruby
  ::Kernel.require("rouge")

  def get_tokens
    lexer&.lex(children.join)
  end

  def lexer
    return unless props[:language]
    case props[:language].to_sym
    when :haml
      Rouge::Lexers::Haml.new
    when :shell
      Rouge::Lexers::Shell.new
    when :jsx
      Rouge::Lexers::JSX.new
    when :ruby
      Rouge::Lexers::Ruby.new
    when :html
      Rouge::Lexers::HTML.new
    when :css
      Rouge::Lexers::CSS.new
    when :json
      Rouge::Lexers::JSON.new
    end
  end

:css
  .container {
    display: grid;
  }

  .card {
    display: grid;
    background: #282828;
    border-radius: 2px;
    box-shadow: rgba(50, 50, 93, 0.55) 0px 13px 27px -5px, rgba(0, 0, 0, 0.9) 0px 8px 16px -8px;
    margin: 1em;
    overflow-y: auto;
  }

:ruby
  tokens = get_tokens

- return unless tokens
  .container
    .card
      %code.highlight= children.join
.container
  .card
    %code.highlight
      = tokens.map do |token, str|
        - classname = token.shortname.to_sym
        %span(class=classname)= str
